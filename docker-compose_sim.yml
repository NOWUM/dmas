version: "3"
services:

  postgresdb:
    container_name: postgresdb
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: MaStRUser
      POSTGRES_PASSWORD: MaStR
      POSTGRES_DB: MaStR
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  influxdb:
    container_name: influxdb
    image: influxdb:1.8
    restart: always
    environment:
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: admin
      DOCKER_INFLUXDB_INIT_ORG: dmas
    volumes:
      - ./data/influxdb:/var/lib/influxdb

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    restart: always
    ports:
      - 15672:15672

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    ports:
      - 3000:3000

  market:
    container_name: market
    image: mrk_agent:latest
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile_mrk
    volumes:
      - ./docker_service.cfg:/src/agent_service.cfg

  dem1:
    container_name: dem1
    image: dem_agent:latest
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile_dem
    volumes:
      - ./docker_service.cfg:/src/agent_service.cfg

  pwp1:
    container_name: pwp1
    image: pwp_agent:latest
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile_pwp
    volumes:
      - ./docker_service.cfg:/src/agent_service.cfg

  res1:
    container_name: res1
    image: res_agent:latest
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile_res
    volumes:
      - ./docker_service.cfg:/src/agent_service.cfg

  net:
    container_name: net
    image: net_agent:latest
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile_net
    volumes:
      - ./docker_service.cfg:/src/agent_service.cfg
